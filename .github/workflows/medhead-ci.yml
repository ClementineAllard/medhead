
name: CI

on:
  # Lancement du workflow à chaque push sur la branche main
  push:
    branches: [ "main" ]

  # Autorisation de lancer manuellement le workflow
  workflow_dispatch:

# Actions du workflow
jobs:
  # Compilation api
  build-api:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for Maven wrapper
        run: chmod +x ./api/mvnw
      
      # Compilation de l'api
      - name: Compiles api
        run: ./mvnw clean package -DskipTests
        working-directory: ./api
        
      #  Connexion Docker
      - name: Connexion Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: List target directory
        run: ls -la ./api

      # Création image Docker
      - name: Build Docker image
        run: docker build -t medhead-api:latest -f ./api/Dockerfile .

      # Tag image Docker
      - name: Tag Docker image
        run: docker tag medhead-api:latest ${{ secrets.DOCKER_USERNAME }}/medhead-api:latest

      # Envoi image à Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/medhead-api:latest
        
  # Compilation web application
  build-webapp:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for Maven wrapper
        run: chmod +x ./webapp/mvnw
      
      # Compilation de l'application
      - name: Compiles webapp
        run: ./mvnw clean package -DskipTests
        working-directory: ./webapp
        
      #  Connexion Docker
      - name: Connexion Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Création image Docker
      - name: Build Docker image
        run: docker build -t medhead-webapp:latest -f ./webapp/Dockerfile .

      # Tag image Docker
      - name: Tag Docker image
        run: docker tag medhead-webapp:latest ${{ secrets.DOCKER_USERNAME }}/medhead-webapp:latest

      # Envoi image à Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/medhead-webapp:latest

